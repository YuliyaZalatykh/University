<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>